keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection ggplot() +
mappedelection <- ggplot() +
geom_map(data = state
map = state,
mappedelection <- ggplot() +
geom_map(data = region
map = state,
mappedelection <- ggplot() +
geom_map(data = region
map = region,
mappedelection <- ggplot() +
geom_map(data = state
map = region,
mappedelection <- ggplot() +
geom_map(data = state
map = region,
mappedelection <- ggplot() +
geom_map(data = state
map = region,
mappedelection <- ggplot() +
geom_map(data = state
map = region,
mappedelection <- ggplot() +
geom_map(data = state
map = region,
mappedelection <- ggplot() +
geom_map(data = state
map = region,
mappedelection <- ggplot() +
geom_map(data = region
map = region,
mappedelection <- ggplot() +
geom_map(data = region,
map = region,
aes(x = election, y = lat, map_id = region))
mappedelection <- ggplot() +
geom_map(data = state,
map = region,
aes(x = election, y = lat, map_id = region))
mappedelection <- ggplot() +
geom_map(data = state,
map = state,
aes(x = election, y = lat, map_id = region))
mappedelection <- ggplot() +
geom_map(data = region,
map = region,
aes(x = election, y = lat, map_id = region))
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
install.packages("tidyverse")
library(tidyverse)
library(lubridate)
library(dygraphs)
library(gtrendsR)
library(dplyr)
library(maps)
library(prophet)
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
mappedelection <- ggplot() +
geom_map(data = region,
map = region,
aes(x = election, y = lat, map_id = region))
ggplot() +
geom_map(data = mappedelection,
map = region,
aes(x = election, y = lat, map_id = region))
ggplot() +
geom_map(data = mappedelection,
map = mappeledelection$region,
aes(x = election, y = lat, map_id = region))
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
ggplot() +
geom_map(data = mappedelection,
map = mappeledelection$region,
aes(x = election, y = lat, map_id = region))
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
install.packages("tidyverse")
install.packages("lubridate")
install.packages("dygraphs")
install.packages("gtrendsR")
install.packages("dplyr")
install.packages("maps")
install.packages("prophet")
install.packages("dplyr")
library(tidyverse)
library(lubridate)
library(dygraphs)
library(gtrendsR)
library(dplyr)
library(maps)
library(prophet)
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
names(election) #shows different data frames
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Biden") %>%
arrange(desc(hits)) #filters on highest to lowest
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Biden") %>%
arrange(desc(hits)) #filters on highest to lowest
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
ggplot() +
geom_map(data = mappedelection,
map = mappeledelection$region,
aes(x = election, y = lat, map_id = region))
ggplot() +
geom_map(data = mappedelection,
map = region,
aes(x = election, y = lat, map_id = region))
View(mappedelection)
world_map <- map_data("world")
library(tidyverse)
library(lubridate)
library(dygraphs)
library(gtrendsR)
library(dplyr)
library(maps)
library(prophet)
world_map <- map_data("world")
ggplot(world_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill="lightgray", colour = "white")
US_map <- map_data(c("Delaware"))
?maps
??maps
map('state', fill = TRUE, col = palette())
map('state', fill = TRUE, col = grey())
map('state', fill = TRUE, col = grey
)
map('state', fill = TRUE, col = palette())
states_map <- map_data("state")
View(states_map)
View(mappedelection)
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(states_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
ggplot(states_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = mappedelection$hits), color = "white")+
scale_fill_viridis_c(option = "C")
ggplot(arrests_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
ggplot(arrests_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
ggplot(states_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
View(mappedelection)
ggplot(arrests_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
ggplot(arrests_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C"))
View(states_map)
View(states_map)
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "B")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "A")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "Z")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "G")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "E")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "A")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(states_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "blue")+
scale_fill_viridis_c(option = "C")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
ggplot() +
geom_map(data = mappedelection,
map = region,
aes(x = election, y = lat, map_id = region))
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "C")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_d(option = "E")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(option = "E")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, option = "E")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 0, option = "E")
1
1
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, option = "E")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
names(election) #shows different data frames
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Biden") %>%
arrange(desc(hits)) #filters on highest to lowest
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Trump") %>%
arrange(desc(hits)) #filters on highest to lowest
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
names(election) #shows different data frames
library(tidyverse)
---
title: "Trend"
mappedelection
---
title: "Trend"
author: "Joost Klooster"
date: "27-9-2020"
---
install.packages("tidyverse")
install.packages("lubridate")
install.packages("dygraphs")
install.packages("gtrendsR")
install.packages("dplyr")
install.packages("maps")
install.packages("prophet")
library(tidyverse)
library(lubridate)
library(dygraphs)
library(gtrendsR)
library(dplyr)
library(maps)
library(prophet)
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
names(election) #shows different data frames
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Biden") %>%
arrange(desc(hits)) #filters on highest to lowest
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
tinytex::install_tinytex()
library(tinytex)
rm(list = ls())
library(tidyverse)
library(lubridate)
library(dygraphs)
library(gtrendsR)
library(dplyr)
library(maps)
library(prophet)
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
names(election) #shows different data frames
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Biden") %>%
arrange(desc(hits)) #filters on highest to lowest
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
votes_map <- left_join(states_map, mappedelection, by = "region")
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
names(election) #shows different data frames
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Biden") %>%
arrange(desc(hits)) #filters on highest to lowest
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
votes_map <- left_join(states_map, mappedelection, by = "region")
library(tidyverse)
library(lubridate)
library(dygraphs)
library(gtrendsR)
library(dplyr)
library(maps)
library(prophet)
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
names(election) #shows different data frames
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Biden") %>%
arrange(desc(hits)) #filters on highest to lowest
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
states_map <- map_data("state")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
states_map <- map_data("state")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
states_map <- map_data("state")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
---
title: "Trend"
author: "Joost Klooster"
date: "27-9-2020"
---
install.packages("tidyverse")
install.packages("lubridate")
install.packages("dygraphs")
install.packages("gtrendsR")
install.packages("dplyr")
install.packages("maps")
install.packages("prophet")
library(tidyverse)
library(lubridate)
library(dygraphs)
library(gtrendsR)
library(dplyr)
library(maps)
library(prophet)
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
names(election) #shows different data frames
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Biden") %>%
arrange(desc(hits)) #filters on highest to lowest
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
states_map <- map_data("state")
votes_map <- left_join(states_map, mappedelection, by = "region")
states_map <- map_data("state")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
library(tidyverse)
library(lubridate)
library(dygraphs)
library(gtrendsR)
library(dplyr)
library(maps)
library(prophet)
election <- gtrends(keyword=c("Trump", "Biden"), geo="US", time = "today 12-m")
names(election) #shows different data frames
election$interest_by_region %>% #The %>% operator is a 'pipe' operator, which passes data from the output of the function to the left and puts it, by default, into the first parameter of the function on the right.
filter(keyword == "Biden") %>%
arrange(desc(hits)) #filters on highest to lowest
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
mappedelection <- election$interest_by_region %>%
mutate(region = tolower(location)) %>%
filter(region %in% region,
keyword == 'Trump') %>%
select(region, hits) %>%
arrange(desc(hits))
mappedelection
states_map <- map_data("state")
votes_map <- left_join(states_map, mappedelection, by = "region")
ggplot(votes_map, aes(long, lat, group = group))+
geom_polygon(aes(fill = hits), color = "white")+
scale_fill_viridis_c(alpha = 1, direction = -1, option = "E")
